{"ast":null,"code":"import _slicedToArray from \"/Users/karenksin/reactProjects/todoList/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/karenksin/reactProjects/todoList/src/components/Main.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport TaskList from './TaskList.js';\nimport uuidv4 from 'uuid/v4';\nimport './Main.css';\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\n\nfunction Main() {\n  const _useState = useState([{\n    id: 1,\n    name: 'Todo 1',\n    complete: false\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n\n  const todoNameRef = useRef(); //to save our todos on the page \n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n\n    if (storedTodos) {\n      setTodos(storedTodos);\n    }\n  }, []); //any time the array changes, useEffect is called \n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === \"\") return;\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: uuidv4(),\n        name: name,\n        complete: false\n      }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete);\n    setTodos(newTodos);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container todolist\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \" Todo List \"), React.createElement(TaskList, {\n    todos: todos,\n    toggleTodo: toggleTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    ref: todoNameRef,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleAddTodo,\n    id: \"add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Add Todo \"), React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-danger\",\n    onClick: handleClearTodos,\n    id: \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"  Delete Todo \"), React.createElement(\"div\", {\n    id: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \" \", todos.filter(todo => !todo.complete).length, \" left to do \"));\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/karenksin/reactProjects/todoList/src/components/Main.js"],"names":["React","useState","useRef","useEffect","TaskList","uuidv4","LOCAL_STORAGE_KEY","Main","id","name","complete","todos","setTodos","todoNameRef","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","handleAddTodo","e","current","value","prevTodos","toggleTodo","newTodos","todo","find","handleClearTodos","filter","length"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport TaskList from './TaskList.js';\nimport uuidv4 from 'uuid/v4';\nimport './Main.css';\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nfunction Main () {\n  \n  const [todos, setTodos] = useState([{ id: 1, name:'Todo 1',complete: false }])\n  const todoNameRef =useRef()\n  \n  //to save our todos on the page \n  useEffect(() => {\n      const storedTodos= JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n      if(storedTodos) { \n        setTodos(storedTodos);\n      }\n  }, [])\n\n//any time the array changes, useEffect is called \n  useEffect(() => {\n     localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(todos))\n  }, [todos])\n\n  \n\n\n  function handleAddTodo (e){\n   const name= todoNameRef.current.value;\n   if(name === \"\") return \n   setTodos(prevTodos => {\n      return [...prevTodos,{id: uuidv4(), name: name , complete: false }]\n   })\n\n   todoNameRef.current.value = null \n   \n\n\n  }\n \n  function toggleTodo(id){\n    const newTodos =[...todos]; \n    const todo = newTodos.find(todo=>todo.id ===id)\n    todo.complete= !todo.complete\n    setTodos(newTodos)\n\n  }\n \n  function handleClearTodos(){\n    const newTodos= todos.filter(todo=> !todo.complete)\n    setTodos(newTodos)\n  }\n  return (\n          <div className= \"container todolist\" >  \n             <h1> Todo List </h1>\n             \n            <TaskList todos={todos} toggleTodo={toggleTodo}/>  \n\n            <input ref={todoNameRef} type = \"text\"></input>\n            <button onClick={handleAddTodo} id= \"add\">Add Todo </button> \n            <button type=\"button\" class=\"btn btn-danger\" onClick= {handleClearTodos}id= \"delete\">  Delete Todo </button>\n            <div id=\"left\"> {todos.filter(todo=>!todo.complete).length} left to do </div>\n          </div>\n        );\n    \n}\n\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}