{"ast":null,"code":"import _slicedToArray from \"/Users/karenksin/reactProjects/todoList/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/karenksin/reactProjects/todoList/src/components/Main.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport TaskList from './TaskList.js';\nimport uuidv4 from 'uuid/v4';\nimport './Main.css';\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\n\nfunction Main() {\n  const _useState = useState([{\n    id: 1,\n    name: 'Todo 1',\n    complete: false\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n\n  const todoNameRef = useRef(); //to save our todos on the page \n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n\n    if (storedTodos) {\n      setTodos(storedTodos);\n    }\n  }, []); //any time the array changes, useEffect is called \n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function handleAddTodoOnClick(e) {\n    const name = todoNameRef.current.value;\n    if (name === \"\") return;\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: uuidv4(),\n        name: name,\n        complete: false\n      }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  function handleAddTodoOnEnter(e) {\n    const name = todoNameRef.current.value;\n    if (name === \"\") return;\n\n    if (e.key === \"Enter\") {\n      setTodos(prevTodos => {\n        return [...prevTodos, {\n          id: uuidv4(),\n          name: name,\n          complete: false\n        }];\n      });\n      todoNameRef.current.value = null;\n    }\n  }\n\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete);\n    setTodos(newTodos);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container todolist\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"\\u2713 \\uD835\\uDD44\\uD835\\uDD6A \\uD835\\uDD4B\\uD835\\uDD52\\uD835\\uDD64\\uD835\\uDD5C\\uD835\\uDD64 \"), React.createElement(\"div\", {\n    className: \"decor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \" \\u25CC\\u25CC\\u25CC\\u2710\\u270E\\u2710\\u270E\\u25CC\\u25CC\\u25CC\"), React.createElement(\"div\", {\n    className: \"lefttodos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \" \", todos.filter(todo => !todo.complete).length, \" left to do \"), React.createElement(TaskList, {\n    todos: todos,\n    toggleTodo: toggleTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    ref: todoNameRef,\n    type: \"text\",\n    onKeyPress: handleAddTodoOnEnter,\n    placeholder: \"I want to...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleAddTodoOnClick,\n    class: \"btn btn-primary \",\n    id: \"add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Add \")), React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-danger\",\n    onClick: handleClearTodos,\n    id: \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"  Delete \"));\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/karenksin/reactProjects/todoList/src/components/Main.js"],"names":["React","useState","useRef","useEffect","TaskList","uuidv4","LOCAL_STORAGE_KEY","Main","id","name","complete","todos","setTodos","todoNameRef","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","handleAddTodoOnClick","e","current","value","prevTodos","handleAddTodoOnEnter","key","toggleTodo","newTodos","todo","find","handleClearTodos","filter","length"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport TaskList from './TaskList.js';\nimport uuidv4 from 'uuid/v4';\nimport './Main.css';\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nfunction Main() {\n\n  const [todos, setTodos] = useState([{ id: 1, name: 'Todo 1', complete: false }])\n  const todoNameRef = useRef()\n\n  //to save our todos on the page \n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if (storedTodos) {\n      setTodos(storedTodos);\n    }\n  }, [])\n\n  //any time the array changes, useEffect is called \n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n\n\n\n  function handleAddTodoOnClick(e) {\n    const name = todoNameRef.current.value;\n    if (name === \"\") return\n\n    setTodos(prevTodos => {\n      return [...prevTodos, { id: uuidv4(), name: name, complete: false }]\n    })\n\n    todoNameRef.current.value = null\n\n\n\n  }\n  function handleAddTodoOnEnter(e) {\n    const name = todoNameRef.current.value;\n    if (name === \"\") return\n\n    if (e.key === \"Enter\") {\n      setTodos(prevTodos => {\n        return [...prevTodos, { id: uuidv4(), name: name, complete: false }]\n      })\n      todoNameRef.current.value = null\n    }\n\n\n  }\n\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n  return (\n    <div className=\"container todolist\" >\n      <h1 className=\"title\">✓ 𝕄𝕪 𝕋𝕒𝕤𝕜𝕤 </h1>\n      <div className=\"decor\"> ◌◌◌✐✎✐✎◌◌◌</div>\n      <div className=\"lefttodos\"> {todos.filter(todo => !todo.complete).length} left to do </div>\n      <TaskList todos={todos} toggleTodo={toggleTodo} />\n\n      <input ref={todoNameRef} type=\"text\" onKeyPress={handleAddTodoOnEnter} placeholder=\"I want to...\"></input>\n      <div className=\"button\">\n        <button type=\"button\" onClick={handleAddTodoOnClick} class=\"btn btn-primary \" id=\"add\">Add </button>\n\n      </div>\n      <button type=\"button\" class=\"btn btn-danger\" onClick={handleClearTodos} id=\"delete\">  Delete </button>\n\n    </div>\n  );\n\n}\n\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}