{"version":3,"sources":["components/Task.js","components/TaskList.js","components/Main.js","index.js"],"names":["Task","todo","toggleTodo","className","type","checked","complete","onChange","id","name","TaskList","todos","list","slice","reverse","map","key","Main","useState","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","filter","length","newTodos","find","ref","onKeyPress","e","current","value","prevTodos","uuidv4","placeholder","onClick","class","ReactDOM","render","basename","exact","path","component","document","getElementById"],"mappings":"yQAIe,SAASA,EAAT,GAAqC,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,WAIlC,OACE,yBAAKC,UAAU,QACb,2BAAOA,UAAW,SAEjB,2BAAOA,UAAU,QAAQC,KAAM,WAAWC,QAASJ,EAAKK,SAAUC,SAPvE,WACIL,EAAWD,EAAKO,OAOZP,EAAKQ,OCTF,SAASC,EAAT,GAAwC,IAArBC,EAAoB,EAApBA,MAAOT,EAAa,EAAbA,WAC/BU,EAAOD,EAAME,QAAQC,UAAUC,KAAI,SAAAd,GACrC,OAAO,kBAAC,EAAD,CAAMe,IAAKf,EAAKO,GAAIN,WAAYA,EAAYD,KAAOA,OAE9D,OAEA,yBAAKE,UAAW,QAAhB,IAAyBS,EAAzB,K,2BC6EWK,MAhFf,WAAiB,IAAD,EAEYC,mBAAS,CAAC,CAAEV,GAAI,EAAGC,KAAM,SAAUH,UAAU,KAFzD,mBAEPK,EAFO,KAEAQ,EAFA,KAGRC,EAAcC,mBAyDpB,OAtDAC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QATtB,kBAUlBJ,GACFJ,EAASI,KAEV,IAGHD,qBAAU,WACRI,aAAaE,QAjBS,gBAiBkBJ,KAAKK,UAAUlB,MACtD,CAACA,IA6CF,yBAAKR,UAAU,sBACb,wBAAIA,UAAU,SAAd,iGACA,yBAAKA,UAAU,SAAf,iEACA,yBAAKA,UAAU,aAAf,IAA6BQ,EAAMmB,QAAO,SAAA7B,GAAI,OAAKA,EAAKK,YAAUyB,OAAlE,gBACA,kBAACrB,EAAD,CAAUC,MAAOA,EAAOT,WAjB5B,SAAoBM,GAClB,IAAMwB,EAAQ,YAAOrB,GACfV,EAAO+B,EAASC,MAAK,SAAAhC,GAAI,OAAIA,EAAKO,KAAOA,KAC/CP,EAAKK,UAAYL,EAAKK,SACtBa,EAASa,MAeP,2BAAOE,IAAKd,EAAahB,KAAK,OAAO+B,WAjCzC,SAA8BC,GAC5B,IAAM3B,EAAOW,EAAYiB,QAAQC,MACpB,KAAT7B,GAEU,UAAV2B,EAAEpB,MACJG,GAAS,SAAAoB,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAE/B,GAAIgC,MAAU/B,KAAMA,EAAMH,UAAU,QAE9Dc,EAAYiB,QAAQC,MAAQ,OAyB2CG,YAAY,iBACnF,yBAAKtC,UAAU,UACb,4BAAQC,KAAK,SAASsC,QAhD5B,SAA8BN,GAC5B,IAAM3B,EAAOW,EAAYiB,QAAQC,MACpB,KAAT7B,IAEJU,GAAS,SAAAoB,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAE/B,GAAIgC,MAAU/B,KAAMA,EAAMH,UAAU,QAG9Dc,EAAYiB,QAAQC,MAAQ,OAwC6BK,MAAM,mBAAmBnC,GAAG,OAAjF,SAGF,4BAAQJ,KAAK,SAASuC,MAAM,iBAAiBD,QAhBjD,WACE,IAAMV,EAAWrB,EAAMmB,QAAO,SAAA7B,GAAI,OAAKA,EAAKK,YAC5Ca,EAASa,IAciExB,GAAG,UAA3E,eCvENoC,IAASC,OACP,kBAAC,IAAD,CAAeC,SAAS,aAEtB,8BAEE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhC,MAKnCiC,SAASC,eAAe,W","file":"static/js/main.8c2530e4.chunk.js","sourcesContent":["import React from 'react';\nimport './Task.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default function Task ({ todo, toggleTodo}) {\n    function handleTodoClick(){\n        toggleTodo(todo.id)\n    }\n    return (\n      <div className=\"task\">\n        <label className= \"label\"> \n            \n         <input className=\"check\" type= \"checkbox\" checked={todo.complete} onChange={handleTodoClick} /> \n           {todo.name}  \n          </label>\n      </div>\n    )\n  }\n  //everytime you click, it calls 'onchange()', toggleTodo and todo.id will get passed in \n  //from Todolist, which then calls toggleTodo () in Main.js which will then reset our todoList variable \n  //to newlist of todos (newTodos) with the todo check we clicked on. resulting in the check box and saving the it to the local storage and remains on the page ","import React from 'react'\nimport Task from './Task'\n\n\nexport default function TaskList({todos, toggleTodo}) {\n    const list=  todos.slice().reverse().map(todo => {\n        return <Task key={todo.id} toggleTodo={toggleTodo} todo= {todo} /> \n    })\n    return (  \n    \n    <div className= \"list\"> {list} </div>\n    )\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport TaskList from './TaskList.js';\nimport uuidv4 from 'uuid/v4';\nimport './Main.css';\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nfunction Main() {\n\n  const [todos, setTodos] = useState([{ id: 1, name: 'Todo 1', complete: false }])\n  const todoNameRef = useRef()\n\n  //to save our todos on the page \n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if (storedTodos) {\n      setTodos(storedTodos);\n    }\n  }, [])\n\n  //any time the array changes, useEffect is called \n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n\n\n\n  function handleAddTodoOnClick(e) {\n    const name = todoNameRef.current.value;\n    if (name === \"\") return\n\n    setTodos(prevTodos => {\n      return [...prevTodos, { id: uuidv4(), name: name, complete: false }]\n    })\n\n    todoNameRef.current.value = null\n\n\n\n  }\n  function handleAddTodoOnEnter(e) {\n    const name = todoNameRef.current.value;\n    if (name === \"\") return\n\n    if (e.key === \"Enter\") {\n      setTodos(prevTodos => {\n        return [...prevTodos, { id: uuidv4(), name: name, complete: false }]\n      })\n      todoNameRef.current.value = null\n    }\n\n\n  }\n\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n  return (\n    <div className=\"container todolist\" >\n      <h1 className=\"title\">‚úì ùïÑùï™ ùïãùïíùï§ùïúùï§ </h1>\n      <div className=\"decor\"> ‚óå‚óå‚óå‚úê‚úé‚úê‚úé‚óå‚óå‚óå</div>\n      <div className=\"lefttodos\"> {todos.filter(todo => !todo.complete).length} left to do </div>\n      <TaskList todos={todos} toggleTodo={toggleTodo} />\n\n      <input ref={todoNameRef} type=\"text\" onKeyPress={handleAddTodoOnEnter} placeholder=\"I want to...\"></input>\n      <div className=\"button\">\n        <button type=\"button\" onClick={handleAddTodoOnClick} class=\"btn btn-primary \" id=\"add\">Add </button>\n\n      </div>\n      <button type=\"button\" class=\"btn btn-danger\" onClick={handleClearTodos} id=\"delete\">  Delete </button>\n\n    </div>\n  );\n\n}\n\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Route, Link } from 'react-router-dom';\nimport Main from './components/Main.js';\n\n\n\nReactDOM.render(\n  <BrowserRouter basename=\"/todoList\">\n\n    <main>\n\n      <Route exact path=\"/\" component={Main} />\n\n    </main>\n\n  </BrowserRouter>\n  , document.getElementById('root'))\n"],"sourceRoot":""}